variables:
  GOOGLE_APPLICATION_CREDENTIALS:
  CI: "false"
  GCP_PROJECT_ID: "leonard-niehaus"

stages:
  - install
  - build
  - deploy
  - test

image: node:20

install:
  stage: install
  cache:
    - key: NPM_DOWNLOAD_CACHE
      paths:
        - .npm/
      when: on_success
      policy: pull-push
    - key: NODE_MODULES_${CI_PIPELINE_ID}
      paths:
        - node_modules/
      when: on_success
      policy: push
  script:
    - npm ci --cache .npm --prefer-offline --legacy-peer-deps

build:
  stage: build
  needs: ["install"]
  cache:
    - key: NODE_MODULES_${CI_PIPELINE_ID}
      paths:
        - node_modules/
      when: on_success
      policy: pull-push
  artifacts:
    paths:
      - dist/
  script:
    - npm run build
    - npm prune --omit=dev --legacy-peer-deps

deploy:
  stage: deploy
  image: andreysenov/firebase-tools
  cache:
    - key: NODE_MODULES_${CI_PIPELINE_ID}
      paths:
        - node_modules/
      policy: pull
  needs:
    - job: build
      artifacts: true
  script:
    - firebase deploy --only=hosting --project=${GCP_PROJECT_ID}

# in-built SAST framework of Gitlab CI
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

# SAST test stage
sast:
  stage: test
  needs: []
  dependencies: []
